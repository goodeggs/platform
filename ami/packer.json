{
  "variables": {
    "aws_access_key": "{{env `AWS_ACCESS_KEY_ID`}}",
    "aws_secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}",
    "aws_security_token": "{{env `AWS_SECURITY_TOKEN`}}",
    "aws_region": "us-east-1",
    "logspout_image": null,
    "logspout_token": null,
    "sumo_access_id": null,
    "sumo_access_key": null,
    "librato_email": null,
    "librato_token": null,
    "env": null,
    "version": "{{isotime \"20060102T150405\"}}"
  },
  "builders": [
    {
      "type": "amazon-ebs",
      "access_key": "{{user `aws_access_key`}}",
      "secret_key": "{{user `aws_secret_key`}}",
      "token": "{{user `aws_security_token`}}",
      "region": "{{user `aws_region`}}",
      "source_ami": "{{user `source_ami`}}",
      "instance_type": "t2.micro",
      "ssh_username": "ec2-user",
      "communicator": "ssh",
      "ssh_pty": true,
      "ami_name": "Good Eggs ECS Image {{user `version`}}",
      "user_data_file": "user_data.sh",
      "ami_block_device_mappings": [
        {"device_name": "/dev/xvdcz", "volume_size": 22, "volume_type": "gp2", "delete_on_termination": true}
      ]
    }
  ],
  "provisioners": [
    {
      "type": "file",
      "source": "goodeggs-hostname.conf",
      "destination": "/home/ec2-user/goodeggs-hostname.conf"
    },
    {
      "type": "file",
      "source": "tsc-clocksource.conf",
      "destination": "/home/ec2-user/tsc-clocksource.conf"
    },
    {
      "type": "file",
      "source": "logspout.conf",
      "destination": "/home/ec2-user/logspout.conf"
    },
    {
      "type": "file",
      "source": "logspout.logrotate.conf",
      "destination": "/home/ec2-user/logspout.logrotate.conf"
    },
    {
      "type": "file",
      "source": "sumo.conf",
      "destination": "/home/ec2-user/sumo.conf"
    },
    {
      "type": "file",
      "source": "sumo_sources.json",
      "destination": "/home/ec2-user/sumo_sources.json"
    },
    {
      "type": "file",
      "source": "cron-docker-custodian",
      "destination": "/home/ec2-user/cron-docker-custodian"
    },
    {
      "type": "file",
      "source": "collectd.conf",
      "destination": "/home/ec2-user/collectd.conf"
    },
    {
      "type": "file",
      "source": "memory-available.sh",
      "destination": "/home/ec2-user/memory-available.sh"
    },
    {
      "type": "file",
      "source": "install-collectd.sh",
      "destination": "/home/ec2-user/install-collectd.sh"
    },
    {
      "type": "file",
      "source": "collectd.spec.amzn1",
      "destination": "/home/ec2-user/collectd.spec.amzn1"
    },
    {
      "type": "file",
      "source": "detach-ebs-volumes.sh",
      "destination": "/home/ec2-user/detach-ebs-volumes.sh"
    },
    {
      "type": "shell",
      "inline": [
        "while [ ! -f /run/cloud-init/result.json ]; do echo 'Waiting for cloud-init...'; sleep 10; done",

        "echo '# Clear docker fs'",
        "sudo service docker stop",
        "sudo rm -rf /var/lib/docker",

        "echo '# Detach /dev/xvdcz EBS volume'",
        "chmod +x /home/ec2-user/detach-ebs-volumes.sh",
        "AWS_ACCESS_KEY_ID='{{user `aws_access_key`}}' AWS_SECRET_ACCESS_KEY='{{user `aws_secret_key`}}' AWS_DEFAULT_REGION='{{user `aws_region`}}' AWS_SECURITY_TOKEN='{{user `aws_security_token`}}' /home/ec2-user/detach-ebs-volumes.sh",
        "rm -f /home/ec2-user/detach-ebs-volumes.sh",

        "echo '# Install goodeggs-hostname.conf'",
        "sudo mv {/home/ec2-user,/etc/init}/goodeggs-hostname.conf",
        "sudo sed -i -- 's/%ENV%/{{user `env`}}/' /etc/init/goodeggs-hostname.conf",

        "echo '# Install tsc-clocksource.conf'",
        "sudo mv {/home/ec2-user,/etc/init}/tsc-clocksource.conf",

        "echo '# Setup /etc/logspout'",
        "sudo mkdir -p /etc/logspout",
        "echo '{{user `logspout_image`}}' | sudo dd of=/etc/logspout/image",
        "echo '{{user `logspout_token`}}' | sudo dd of=/etc/logspout/token",
        "sudo chmod 0600 /etc/logspout/*",

        "echo '# Install logspout.conf'",
        "sudo mv {/home/ec2-user,/etc/init}/logspout.conf",

        "echo '# Install logspout.logrotate.conf'",
        "sudo mv /home/ec2-user/logspout.logrotate.conf /etc/logrotate.d/logspout.conf",

        "echo '# Install sumo.conf'",
        "sudo mv {/home/ec2-user,/etc}/sumo.conf",
        "sudo sed -i -- 's/%SUMO_ACCESS_ID%/{{user `sumo_access_id`}}/' /etc/sumo.conf",
        "sudo sed -i -- 's/%SUMO_ACCESS_KEY%/{{user `sumo_access_key`}}/' /etc/sumo.conf",

        "echo '# Install sumo_sources.json'",
        "sudo mv {/home/ec2-user,/etc}/sumo_sources.json",

        "echo '# Install SumoLogic Collector'",
        "curl -o /tmp/sumo_installer.sh https://collectors.sumologic.com/rest/download/linux/64",
        "sudo sh /tmp/sumo_installer.sh -q -dir /usr/local/SumoCollector",
        "rm -r /tmp/sumo_installer.sh",
        "sudo /usr/local/SumoCollector/collector stop",
        "sudo rm -rf /usr/local/SumoCollector/config/{creds,user.properties}",

        "echo '# Install docker-custodian'",
        "sudo mv /home/ec2-user/cron-docker-custodian /etc/cron.hourly/docker-custodian",
        "sudo chmod 0755 /etc/cron.hourly/docker-custodian",

        "echo '# Install collectd'",
        "sudo sh /home/ec2-user/install-collectd.sh",
        "rm /home/ec2-user/install-collectd.sh",
        "sudo mv {/home/ec2-user,/etc}/collectd.conf",
        "sudo sed -i -- 's/%LIBRATO_EMAIL%/{{user `librato_email`}}/' /etc/collectd.conf",
        "sudo sed -i -- 's/%LIBRATO_TOKEN%/{{user `librato_token`}}/' /etc/collectd.conf",
        "sudo chmod 0600 /etc/collectd.conf",
        "sudo mkdir -p /var/lib/collectd",
        "sudo mv {/home/ec2-user,/var/lib/collectd}/memory-available.sh",
        "sudo chmod 0755 /var/lib/collectd/memory-available.sh"
      ]
    }
  ]
}
